#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="WEDMAYTINH")]
public partial class WedMayTinhDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertKhachHang(KhachHang instance);
  partial void UpdateKhachHang(KhachHang instance);
  partial void DeleteKhachHang(KhachHang instance);
  partial void InsertHoaDonNhap(HoaDonNhap instance);
  partial void UpdateHoaDonNhap(HoaDonNhap instance);
  partial void DeleteHoaDonNhap(HoaDonNhap instance);
  partial void InsertNhaCungCap(NhaCungCap instance);
  partial void UpdateNhaCungCap(NhaCungCap instance);
  partial void DeleteNhaCungCap(NhaCungCap instance);
  partial void InsertChiTietNhap(ChiTietNhap instance);
  partial void UpdateChiTietNhap(ChiTietNhap instance);
  partial void DeleteChiTietNhap(ChiTietNhap instance);
  partial void InsertChucNang(ChucNang instance);
  partial void UpdateChucNang(ChucNang instance);
  partial void DeleteChucNang(ChucNang instance);
  partial void InsertNhanVien(NhanVien instance);
  partial void UpdateNhanVien(NhanVien instance);
  partial void DeleteNhanVien(NhanVien instance);
  partial void InsertNhaSanXuat(NhaSanXuat instance);
  partial void UpdateNhaSanXuat(NhaSanXuat instance);
  partial void DeleteNhaSanXuat(NhaSanXuat instance);
  partial void InsertChiTietThongSo(ChiTietThongSo instance);
  partial void UpdateChiTietThongSo(ChiTietThongSo instance);
  partial void DeleteChiTietThongSo(ChiTietThongSo instance);
  partial void InsertSanPhams(SanPhams instance);
  partial void UpdateSanPhams(SanPhams instance);
  partial void DeleteSanPhams(SanPhams instance);
  partial void InsertGioHangs(GioHangs instance);
  partial void UpdateGioHangs(GioHangs instance);
  partial void DeleteGioHangs(GioHangs instance);
  partial void InsertKhuyenMai(KhuyenMai instance);
  partial void UpdateKhuyenMai(KhuyenMai instance);
  partial void DeleteKhuyenMai(KhuyenMai instance);
  partial void InsertSanPham_KhuyenMai(SanPham_KhuyenMai instance);
  partial void UpdateSanPham_KhuyenMai(SanPham_KhuyenMai instance);
  partial void DeleteSanPham_KhuyenMai(SanPham_KhuyenMai instance);
  partial void InsertChiTietDonHang(ChiTietDonHang instance);
  partial void UpdateChiTietDonHang(ChiTietDonHang instance);
  partial void DeleteChiTietDonHang(ChiTietDonHang instance);
  partial void InsertDonDatHangs(DonDatHangs instance);
  partial void UpdateDonDatHangs(DonDatHangs instance);
  partial void DeleteDonDatHangs(DonDatHangs instance);
  #endregion
	
	public WedMayTinhDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WEDMAYTINHConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public WedMayTinhDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WedMayTinhDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WedMayTinhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public WedMayTinhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<KhachHang> KhachHangs
	{
		get
		{
			return this.GetTable<KhachHang>();
		}
	}
	
	public System.Data.Linq.Table<linkanh> linkanhs
	{
		get
		{
			return this.GetTable<linkanh>();
		}
	}
	
	public System.Data.Linq.Table<HoaDonNhap> HoaDonNhaps
	{
		get
		{
			return this.GetTable<HoaDonNhap>();
		}
	}
	
	public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
	{
		get
		{
			return this.GetTable<NhaCungCap>();
		}
	}
	
	public System.Data.Linq.Table<ChiTietNhap> ChiTietNhaps
	{
		get
		{
			return this.GetTable<ChiTietNhap>();
		}
	}
	
	public System.Data.Linq.Table<ChucNang> ChucNangs
	{
		get
		{
			return this.GetTable<ChucNang>();
		}
	}
	
	public System.Data.Linq.Table<NhanVien> NhanViens
	{
		get
		{
			return this.GetTable<NhanVien>();
		}
	}
	
	public System.Data.Linq.Table<NhaSanXuat> NhaSanXuats
	{
		get
		{
			return this.GetTable<NhaSanXuat>();
		}
	}
	
	public System.Data.Linq.Table<ChiTietThongSo> ChiTietThongSos
	{
		get
		{
			return this.GetTable<ChiTietThongSo>();
		}
	}
	
	public System.Data.Linq.Table<SanPhams> SanPhams
	{
		get
		{
			return this.GetTable<SanPhams>();
		}
	}
	
	public System.Data.Linq.Table<GioHangs> GioHangs
	{
		get
		{
			return this.GetTable<GioHangs>();
		}
	}
	
	public System.Data.Linq.Table<KhuyenMai> KhuyenMais
	{
		get
		{
			return this.GetTable<KhuyenMai>();
		}
	}
	
	public System.Data.Linq.Table<SanPham_KhuyenMai> SanPham_KhuyenMais
	{
		get
		{
			return this.GetTable<SanPham_KhuyenMai>();
		}
	}
	
	public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this.GetTable<ChiTietDonHang>();
		}
	}
	
	public System.Data.Linq.Table<DonDatHangs> DonDatHangs
	{
		get
		{
			return this.GetTable<DonDatHangs>();
		}
	}
}

[Table(Name="dbo.KhachHang")]
public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaKhachHang;
	
	private string _TenKhachHang;
	
	private string _DiaChi;
	
	private double _SoDienThoai;
	
	private string _GioiTinh;
	
	private string _Email;
	
	private string _TenDangNhap;
	
	private string _MatKhau;
	
	private EntitySet<GioHangs> _GioHangs;
	
	private EntitySet<DonDatHangs> _DonDatHangs;
	
	private EntitySet<DonDatHangs> _DonDatHangs1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(double value);
    partial void OnSoDienThoaiChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
	
	public KhachHang()
	{
		this._GioHangs = new EntitySet<GioHangs>(new Action<GioHangs>(this.attach_GioHangs), new Action<GioHangs>(this.detach_GioHangs));
		this._DonDatHangs = new EntitySet<DonDatHangs>(new Action<DonDatHangs>(this.attach_DonDatHangs), new Action<DonDatHangs>(this.detach_DonDatHangs));
		this._DonDatHangs1 = new EntitySet<DonDatHangs>(new Action<DonDatHangs>(this.attach_DonDatHangs1), new Action<DonDatHangs>(this.detach_DonDatHangs1));
		OnCreated();
	}
	
	[Column(Storage="_MaKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MaKhachHang
	{
		get
		{
			return this._MaKhachHang;
		}
		set
		{
			if ((this._MaKhachHang != value))
			{
				this.OnMaKhachHangChanging(value);
				this.SendPropertyChanging();
				this._MaKhachHang = value;
				this.SendPropertyChanged("MaKhachHang");
				this.OnMaKhachHangChanged();
			}
		}
	}
	
	[Column(Storage="_TenKhachHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenKhachHang
	{
		get
		{
			return this._TenKhachHang;
		}
		set
		{
			if ((this._TenKhachHang != value))
			{
				this.OnTenKhachHangChanging(value);
				this.SendPropertyChanging();
				this._TenKhachHang = value;
				this.SendPropertyChanged("TenKhachHang");
				this.OnTenKhachHangChanged();
			}
		}
	}
	
	[Column(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[Column(Storage="_SoDienThoai", DbType="Float NOT NULL")]
	public double SoDienThoai
	{
		get
		{
			return this._SoDienThoai;
		}
		set
		{
			if ((this._SoDienThoai != value))
			{
				this.OnSoDienThoaiChanging(value);
				this.SendPropertyChanging();
				this._SoDienThoai = value;
				this.SendPropertyChanged("SoDienThoai");
				this.OnSoDienThoaiChanged();
			}
		}
	}
	
	[Column(Storage="_GioiTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string GioiTinh
	{
		get
		{
			return this._GioiTinh;
		}
		set
		{
			if ((this._GioiTinh != value))
			{
				this.OnGioiTinhChanging(value);
				this.SendPropertyChanging();
				this._GioiTinh = value;
				this.SendPropertyChanged("GioiTinh");
				this.OnGioiTinhChanged();
			}
		}
	}
	
	[Column(Storage="_Email", DbType="NVarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[Column(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenDangNhap
	{
		get
		{
			return this._TenDangNhap;
		}
		set
		{
			if ((this._TenDangNhap != value))
			{
				this.OnTenDangNhapChanging(value);
				this.SendPropertyChanging();
				this._TenDangNhap = value;
				this.SendPropertyChanged("TenDangNhap");
				this.OnTenDangNhapChanged();
			}
		}
	}
	
	[Column(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MatKhau
	{
		get
		{
			return this._MatKhau;
		}
		set
		{
			if ((this._MatKhau != value))
			{
				this.OnMatKhauChanging(value);
				this.SendPropertyChanging();
				this._MatKhau = value;
				this.SendPropertyChanged("MatKhau");
				this.OnMatKhauChanged();
			}
		}
	}
	
	[Association(Name="KhachHang_GioHangs", Storage="_GioHangs", OtherKey="MaKhachHang")]
	public EntitySet<GioHangs> GioHangs
	{
		get
		{
			return this._GioHangs;
		}
		set
		{
			this._GioHangs.Assign(value);
		}
	}
	
	[Association(Name="KhachHang_DonDatHang", Storage="_DonDatHangs", OtherKey="MaKhachHang")]
	public EntitySet<DonDatHangs> DonDatHangs
	{
		get
		{
			return this._DonDatHangs;
		}
		set
		{
			this._DonDatHangs.Assign(value);
		}
	}
	
	[Association(Name="KhachHang_DonDatHang1", Storage="_DonDatHangs1", OtherKey="MaKhachHang")]
	public EntitySet<DonDatHangs> DonDatHangs1
	{
		get
		{
			return this._DonDatHangs1;
		}
		set
		{
			this._DonDatHangs1.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_GioHangs(GioHangs entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = this;
	}
	
	private void detach_GioHangs(GioHangs entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = null;
	}
	
	private void attach_DonDatHangs(DonDatHangs entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = this;
	}
	
	private void detach_DonDatHangs(DonDatHangs entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang = null;
	}
	
	private void attach_DonDatHangs1(DonDatHangs entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang1 = this;
	}
	
	private void detach_DonDatHangs1(DonDatHangs entity)
	{
		this.SendPropertyChanging();
		entity.KhachHang1 = null;
	}
}

[Table(Name="dbo.linkanh")]
public partial class linkanh
{
	
	private string _linkanh1;
	
	private string _lin;
	
	public linkanh()
	{
	}
	
	[Column(Name="linkanh", Storage="_linkanh1", DbType="NVarChar(50)")]
	public string linkanh1
	{
		get
		{
			return this._linkanh1;
		}
		set
		{
			if ((this._linkanh1 != value))
			{
				this._linkanh1 = value;
			}
		}
	}
	
	[Column(Storage="_lin", DbType="NChar(10)")]
	public string lin
	{
		get
		{
			return this._lin;
		}
		set
		{
			if ((this._lin != value))
			{
				this._lin = value;
			}
		}
	}
}

[Table(Name="dbo.HoaDonNhap")]
public partial class HoaDonNhap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SoHoaDon;
	
	private string _NgayNhap;
	
	private int _MaNhanVien;
	
	private EntitySet<ChiTietNhap> _ChiTietNhaps;
	
	private EntityRef<NhanVien> _NhanVien;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHoaDonChanging(int value);
    partial void OnSoHoaDonChanged();
    partial void OnNgayNhapChanging(string value);
    partial void OnNgayNhapChanged();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    #endregion
	
	public HoaDonNhap()
	{
		this._ChiTietNhaps = new EntitySet<ChiTietNhap>(new Action<ChiTietNhap>(this.attach_ChiTietNhaps), new Action<ChiTietNhap>(this.detach_ChiTietNhaps));
		this._NhanVien = default(EntityRef<NhanVien>);
		OnCreated();
	}
	
	[Column(Storage="_SoHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SoHoaDon
	{
		get
		{
			return this._SoHoaDon;
		}
		set
		{
			if ((this._SoHoaDon != value))
			{
				this.OnSoHoaDonChanging(value);
				this.SendPropertyChanging();
				this._SoHoaDon = value;
				this.SendPropertyChanged("SoHoaDon");
				this.OnSoHoaDonChanged();
			}
		}
	}
	
	[Column(Storage="_NgayNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NgayNhap
	{
		get
		{
			return this._NgayNhap;
		}
		set
		{
			if ((this._NgayNhap != value))
			{
				this.OnNgayNhapChanging(value);
				this.SendPropertyChanging();
				this._NgayNhap = value;
				this.SendPropertyChanged("NgayNhap");
				this.OnNgayNhapChanged();
			}
		}
	}
	
	[Column(Storage="_MaNhanVien", DbType="Int NOT NULL")]
	public int MaNhanVien
	{
		get
		{
			return this._MaNhanVien;
		}
		set
		{
			if ((this._MaNhanVien != value))
			{
				if (this._NhanVien.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNhanVienChanging(value);
				this.SendPropertyChanging();
				this._MaNhanVien = value;
				this.SendPropertyChanged("MaNhanVien");
				this.OnMaNhanVienChanged();
			}
		}
	}
	
	[Association(Name="HoaDonNhap_ChiTietNhap", Storage="_ChiTietNhaps", OtherKey="SoHoaDon")]
	public EntitySet<ChiTietNhap> ChiTietNhaps
	{
		get
		{
			return this._ChiTietNhaps;
		}
		set
		{
			this._ChiTietNhaps.Assign(value);
		}
	}
	
	[Association(Name="NhanVien_HoaDonNhap", Storage="_NhanVien", ThisKey="MaNhanVien", IsForeignKey=true)]
	public NhanVien NhanVien
	{
		get
		{
			return this._NhanVien.Entity;
		}
		set
		{
			NhanVien previousValue = this._NhanVien.Entity;
			if (((previousValue != value) 
						|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhanVien.Entity = null;
					previousValue.HoaDonNhaps.Remove(this);
				}
				this._NhanVien.Entity = value;
				if ((value != null))
				{
					value.HoaDonNhaps.Add(this);
					this._MaNhanVien = value.MaNhanVien;
				}
				else
				{
					this._MaNhanVien = default(int);
				}
				this.SendPropertyChanged("NhanVien");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietNhaps(ChiTietNhap entity)
	{
		this.SendPropertyChanging();
		entity.HoaDonNhap = this;
	}
	
	private void detach_ChiTietNhaps(ChiTietNhap entity)
	{
		this.SendPropertyChanging();
		entity.HoaDonNhap = null;
	}
}

[Table(Name="dbo.NhaCungCap")]
public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaNhaCungCap;
	
	private string _DiaChi;
	
	private string _SoDienThoai;
	
	private string _TenNhaCungCap;
	
	private EntitySet<ChiTietNhap> _ChiTietNhaps;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhaCungCapChanging(int value);
    partial void OnMaNhaCungCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    #endregion
	
	public NhaCungCap()
	{
		this._ChiTietNhaps = new EntitySet<ChiTietNhap>(new Action<ChiTietNhap>(this.attach_ChiTietNhaps), new Action<ChiTietNhap>(this.detach_ChiTietNhaps));
		OnCreated();
	}
	
	[Column(Storage="_MaNhaCungCap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MaNhaCungCap
	{
		get
		{
			return this._MaNhaCungCap;
		}
		set
		{
			if ((this._MaNhaCungCap != value))
			{
				this.OnMaNhaCungCapChanging(value);
				this.SendPropertyChanging();
				this._MaNhaCungCap = value;
				this.SendPropertyChanged("MaNhaCungCap");
				this.OnMaNhaCungCapChanged();
			}
		}
	}
	
	[Column(Storage="_DiaChi", DbType="NVarChar(100)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[Column(Storage="_SoDienThoai", DbType="NVarChar(50)")]
	public string SoDienThoai
	{
		get
		{
			return this._SoDienThoai;
		}
		set
		{
			if ((this._SoDienThoai != value))
			{
				this.OnSoDienThoaiChanging(value);
				this.SendPropertyChanging();
				this._SoDienThoai = value;
				this.SendPropertyChanged("SoDienThoai");
				this.OnSoDienThoaiChanged();
			}
		}
	}
	
	[Column(Storage="_TenNhaCungCap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenNhaCungCap
	{
		get
		{
			return this._TenNhaCungCap;
		}
		set
		{
			if ((this._TenNhaCungCap != value))
			{
				this.OnTenNhaCungCapChanging(value);
				this.SendPropertyChanging();
				this._TenNhaCungCap = value;
				this.SendPropertyChanged("TenNhaCungCap");
				this.OnTenNhaCungCapChanged();
			}
		}
	}
	
	[Association(Name="NhaCungCap_ChiTietNhap", Storage="_ChiTietNhaps", OtherKey="MaNhaCungCap")]
	public EntitySet<ChiTietNhap> ChiTietNhaps
	{
		get
		{
			return this._ChiTietNhaps;
		}
		set
		{
			this._ChiTietNhaps.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietNhaps(ChiTietNhap entity)
	{
		this.SendPropertyChanging();
		entity.NhaCungCap = this;
	}
	
	private void detach_ChiTietNhaps(ChiTietNhap entity)
	{
		this.SendPropertyChanging();
		entity.NhaCungCap = null;
	}
}

[Table(Name="dbo.ChiTietNhap")]
public partial class ChiTietNhap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Nullable<int> _MaNhaCungCap;
	
	private int _SoLuongNhap;
	
	private int _MaSanPham;
	
	private string _NgayNhap;
	
	private double _GiaNhap;
	
	private int _SoHoaDon;
	
	private string _GhiChu;
	
	private EntityRef<HoaDonNhap> _HoaDonNhap;
	
	private EntityRef<NhaCungCap> _NhaCungCap;
	
	private EntityRef<SanPhams> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhaCungCapChanging(System.Nullable<int> value);
    partial void OnMaNhaCungCapChanged();
    partial void OnSoLuongNhapChanging(int value);
    partial void OnSoLuongNhapChanged();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnNgayNhapChanging(string value);
    partial void OnNgayNhapChanged();
    partial void OnGiaNhapChanging(double value);
    partial void OnGiaNhapChanged();
    partial void OnSoHoaDonChanging(int value);
    partial void OnSoHoaDonChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
	
	public ChiTietNhap()
	{
		this._HoaDonNhap = default(EntityRef<HoaDonNhap>);
		this._NhaCungCap = default(EntityRef<NhaCungCap>);
		this._SanPhams = default(EntityRef<SanPhams>);
		OnCreated();
	}
	
	[Column(Storage="_MaNhaCungCap", DbType="Int")]
	public System.Nullable<int> MaNhaCungCap
	{
		get
		{
			return this._MaNhaCungCap;
		}
		set
		{
			if ((this._MaNhaCungCap != value))
			{
				if (this._NhaCungCap.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNhaCungCapChanging(value);
				this.SendPropertyChanging();
				this._MaNhaCungCap = value;
				this.SendPropertyChanged("MaNhaCungCap");
				this.OnMaNhaCungCapChanged();
			}
		}
	}
	
	[Column(Storage="_SoLuongNhap", DbType="Int NOT NULL")]
	public int SoLuongNhap
	{
		get
		{
			return this._SoLuongNhap;
		}
		set
		{
			if ((this._SoLuongNhap != value))
			{
				this.OnSoLuongNhapChanging(value);
				this.SendPropertyChanging();
				this._SoLuongNhap = value;
				this.SendPropertyChanged("SoLuongNhap");
				this.OnSoLuongNhapChanged();
			}
		}
	}
	
	[Column(Storage="_MaSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaSanPham
	{
		get
		{
			return this._MaSanPham;
		}
		set
		{
			if ((this._MaSanPham != value))
			{
				if (this._SanPhams.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSanPhamChanging(value);
				this.SendPropertyChanging();
				this._MaSanPham = value;
				this.SendPropertyChanged("MaSanPham");
				this.OnMaSanPhamChanged();
			}
		}
	}
	
	[Column(Storage="_NgayNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NgayNhap
	{
		get
		{
			return this._NgayNhap;
		}
		set
		{
			if ((this._NgayNhap != value))
			{
				this.OnNgayNhapChanging(value);
				this.SendPropertyChanging();
				this._NgayNhap = value;
				this.SendPropertyChanged("NgayNhap");
				this.OnNgayNhapChanged();
			}
		}
	}
	
	[Column(Storage="_GiaNhap", DbType="Float NOT NULL")]
	public double GiaNhap
	{
		get
		{
			return this._GiaNhap;
		}
		set
		{
			if ((this._GiaNhap != value))
			{
				this.OnGiaNhapChanging(value);
				this.SendPropertyChanging();
				this._GiaNhap = value;
				this.SendPropertyChanged("GiaNhap");
				this.OnGiaNhapChanged();
			}
		}
	}
	
	[Column(Storage="_SoHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SoHoaDon
	{
		get
		{
			return this._SoHoaDon;
		}
		set
		{
			if ((this._SoHoaDon != value))
			{
				if (this._HoaDonNhap.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSoHoaDonChanging(value);
				this.SendPropertyChanging();
				this._SoHoaDon = value;
				this.SendPropertyChanged("SoHoaDon");
				this.OnSoHoaDonChanged();
			}
		}
	}
	
	[Column(Storage="_GhiChu", DbType="NVarChar(100)")]
	public string GhiChu
	{
		get
		{
			return this._GhiChu;
		}
		set
		{
			if ((this._GhiChu != value))
			{
				this.OnGhiChuChanging(value);
				this.SendPropertyChanging();
				this._GhiChu = value;
				this.SendPropertyChanged("GhiChu");
				this.OnGhiChuChanged();
			}
		}
	}
	
	[Association(Name="HoaDonNhap_ChiTietNhap", Storage="_HoaDonNhap", ThisKey="SoHoaDon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public HoaDonNhap HoaDonNhap
	{
		get
		{
			return this._HoaDonNhap.Entity;
		}
		set
		{
			HoaDonNhap previousValue = this._HoaDonNhap.Entity;
			if (((previousValue != value) 
						|| (this._HoaDonNhap.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._HoaDonNhap.Entity = null;
					previousValue.ChiTietNhaps.Remove(this);
				}
				this._HoaDonNhap.Entity = value;
				if ((value != null))
				{
					value.ChiTietNhaps.Add(this);
					this._SoHoaDon = value.SoHoaDon;
				}
				else
				{
					this._SoHoaDon = default(int);
				}
				this.SendPropertyChanged("HoaDonNhap");
			}
		}
	}
	
	[Association(Name="NhaCungCap_ChiTietNhap", Storage="_NhaCungCap", ThisKey="MaNhaCungCap", IsForeignKey=true, DeleteRule="CASCADE")]
	public NhaCungCap NhaCungCap
	{
		get
		{
			return this._NhaCungCap.Entity;
		}
		set
		{
			NhaCungCap previousValue = this._NhaCungCap.Entity;
			if (((previousValue != value) 
						|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhaCungCap.Entity = null;
					previousValue.ChiTietNhaps.Remove(this);
				}
				this._NhaCungCap.Entity = value;
				if ((value != null))
				{
					value.ChiTietNhaps.Add(this);
					this._MaNhaCungCap = value.MaNhaCungCap;
				}
				else
				{
					this._MaNhaCungCap = default(Nullable<int>);
				}
				this.SendPropertyChanged("NhaCungCap");
			}
		}
	}
	
	[Association(Name="SanPhams_ChiTietNhap", Storage="_SanPhams", ThisKey="MaSanPham", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public SanPhams SanPhams
	{
		get
		{
			return this._SanPhams.Entity;
		}
		set
		{
			SanPhams previousValue = this._SanPhams.Entity;
			if (((previousValue != value) 
						|| (this._SanPhams.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPhams.Entity = null;
					previousValue.ChiTietNhaps.Remove(this);
				}
				this._SanPhams.Entity = value;
				if ((value != null))
				{
					value.ChiTietNhaps.Add(this);
					this._MaSanPham = value.MaSanPham;
				}
				else
				{
					this._MaSanPham = default(int);
				}
				this.SendPropertyChanged("SanPhams");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.ChucNang")]
public partial class ChucNang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaNhanVien;
	
	private string _QuanLyNhapHang;
	
	private string _QuanLyMatHang;
	
	private string _QuanLyKhuyenMai;
	
	private string _QuanLyTaiKhoan;
	
	private string _QuanLyNhaCungCap;
	
	private string _QuanLyDonHang;
	
	private string _ThongKe;
	
	private EntityRef<NhanVien> _NhanVien;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnQuanLyNhapHangChanging(string value);
    partial void OnQuanLyNhapHangChanged();
    partial void OnQuanLyMatHangChanging(string value);
    partial void OnQuanLyMatHangChanged();
    partial void OnQuanLyKhuyenMaiChanging(string value);
    partial void OnQuanLyKhuyenMaiChanged();
    partial void OnQuanLyTaiKhoanChanging(string value);
    partial void OnQuanLyTaiKhoanChanged();
    partial void OnQuanLyNhaCungCapChanging(string value);
    partial void OnQuanLyNhaCungCapChanged();
    partial void OnQuanLyDonHangChanging(string value);
    partial void OnQuanLyDonHangChanged();
    partial void OnThongKeChanging(string value);
    partial void OnThongKeChanged();
    #endregion
	
	public ChucNang()
	{
		this._NhanVien = default(EntityRef<NhanVien>);
		OnCreated();
	}
	
	[Column(Storage="_MaNhanVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaNhanVien
	{
		get
		{
			return this._MaNhanVien;
		}
		set
		{
			if ((this._MaNhanVien != value))
			{
				if (this._NhanVien.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaNhanVienChanging(value);
				this.SendPropertyChanging();
				this._MaNhanVien = value;
				this.SendPropertyChanged("MaNhanVien");
				this.OnMaNhanVienChanged();
			}
		}
	}
	
	[Column(Storage="_QuanLyNhapHang", DbType="NVarChar(50)")]
	public string QuanLyNhapHang
	{
		get
		{
			return this._QuanLyNhapHang;
		}
		set
		{
			if ((this._QuanLyNhapHang != value))
			{
				this.OnQuanLyNhapHangChanging(value);
				this.SendPropertyChanging();
				this._QuanLyNhapHang = value;
				this.SendPropertyChanged("QuanLyNhapHang");
				this.OnQuanLyNhapHangChanged();
			}
		}
	}
	
	[Column(Storage="_QuanLyMatHang", DbType="NVarChar(50)")]
	public string QuanLyMatHang
	{
		get
		{
			return this._QuanLyMatHang;
		}
		set
		{
			if ((this._QuanLyMatHang != value))
			{
				this.OnQuanLyMatHangChanging(value);
				this.SendPropertyChanging();
				this._QuanLyMatHang = value;
				this.SendPropertyChanged("QuanLyMatHang");
				this.OnQuanLyMatHangChanged();
			}
		}
	}
	
	[Column(Storage="_QuanLyKhuyenMai", DbType="NVarChar(50)")]
	public string QuanLyKhuyenMai
	{
		get
		{
			return this._QuanLyKhuyenMai;
		}
		set
		{
			if ((this._QuanLyKhuyenMai != value))
			{
				this.OnQuanLyKhuyenMaiChanging(value);
				this.SendPropertyChanging();
				this._QuanLyKhuyenMai = value;
				this.SendPropertyChanged("QuanLyKhuyenMai");
				this.OnQuanLyKhuyenMaiChanged();
			}
		}
	}
	
	[Column(Storage="_QuanLyTaiKhoan", DbType="NVarChar(50)")]
	public string QuanLyTaiKhoan
	{
		get
		{
			return this._QuanLyTaiKhoan;
		}
		set
		{
			if ((this._QuanLyTaiKhoan != value))
			{
				this.OnQuanLyTaiKhoanChanging(value);
				this.SendPropertyChanging();
				this._QuanLyTaiKhoan = value;
				this.SendPropertyChanged("QuanLyTaiKhoan");
				this.OnQuanLyTaiKhoanChanged();
			}
		}
	}
	
	[Column(Storage="_QuanLyNhaCungCap", DbType="NVarChar(50)")]
	public string QuanLyNhaCungCap
	{
		get
		{
			return this._QuanLyNhaCungCap;
		}
		set
		{
			if ((this._QuanLyNhaCungCap != value))
			{
				this.OnQuanLyNhaCungCapChanging(value);
				this.SendPropertyChanging();
				this._QuanLyNhaCungCap = value;
				this.SendPropertyChanged("QuanLyNhaCungCap");
				this.OnQuanLyNhaCungCapChanged();
			}
		}
	}
	
	[Column(Storage="_QuanLyDonHang", DbType="NVarChar(50)")]
	public string QuanLyDonHang
	{
		get
		{
			return this._QuanLyDonHang;
		}
		set
		{
			if ((this._QuanLyDonHang != value))
			{
				this.OnQuanLyDonHangChanging(value);
				this.SendPropertyChanging();
				this._QuanLyDonHang = value;
				this.SendPropertyChanged("QuanLyDonHang");
				this.OnQuanLyDonHangChanged();
			}
		}
	}
	
	[Column(Storage="_ThongKe", DbType="NVarChar(50)")]
	public string ThongKe
	{
		get
		{
			return this._ThongKe;
		}
		set
		{
			if ((this._ThongKe != value))
			{
				this.OnThongKeChanging(value);
				this.SendPropertyChanging();
				this._ThongKe = value;
				this.SendPropertyChanged("ThongKe");
				this.OnThongKeChanged();
			}
		}
	}
	
	[Association(Name="NhanVien_ChucNang", Storage="_NhanVien", ThisKey="MaNhanVien", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public NhanVien NhanVien
	{
		get
		{
			return this._NhanVien.Entity;
		}
		set
		{
			NhanVien previousValue = this._NhanVien.Entity;
			if (((previousValue != value) 
						|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NhanVien.Entity = null;
					previousValue.ChucNang = null;
				}
				this._NhanVien.Entity = value;
				if ((value != null))
				{
					value.ChucNang = this;
					this._MaNhanVien = value.MaNhanVien;
				}
				else
				{
					this._MaNhanVien = default(int);
				}
				this.SendPropertyChanged("NhanVien");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.NhanVien")]
public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaNhanVien;
	
	private string _HoTen;
	
	private string _GioiTinh;
	
	private string _DiaChi;
	
	private System.Nullable<double> _SoDienThoai;
	
	private string _ViTri;
	
	private string _TenDangNhap;
	
	private string _MatKhau;
	
	private string _NgaySinh;
	
	private string _HinhAnh;
	
	private EntitySet<HoaDonNhap> _HoaDonNhaps;
	
	private EntityRef<ChucNang> _ChucNang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(System.Nullable<double> value);
    partial void OnSoDienThoaiChanged();
    partial void OnViTriChanging(string value);
    partial void OnViTriChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
	
	public NhanVien()
	{
		this._HoaDonNhaps = new EntitySet<HoaDonNhap>(new Action<HoaDonNhap>(this.attach_HoaDonNhaps), new Action<HoaDonNhap>(this.detach_HoaDonNhaps));
		this._ChucNang = default(EntityRef<ChucNang>);
		OnCreated();
	}
	
	[Column(Storage="_MaNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MaNhanVien
	{
		get
		{
			return this._MaNhanVien;
		}
		set
		{
			if ((this._MaNhanVien != value))
			{
				this.OnMaNhanVienChanging(value);
				this.SendPropertyChanging();
				this._MaNhanVien = value;
				this.SendPropertyChanged("MaNhanVien");
				this.OnMaNhanVienChanged();
			}
		}
	}
	
	[Column(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string HoTen
	{
		get
		{
			return this._HoTen;
		}
		set
		{
			if ((this._HoTen != value))
			{
				this.OnHoTenChanging(value);
				this.SendPropertyChanging();
				this._HoTen = value;
				this.SendPropertyChanged("HoTen");
				this.OnHoTenChanged();
			}
		}
	}
	
	[Column(Storage="_GioiTinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string GioiTinh
	{
		get
		{
			return this._GioiTinh;
		}
		set
		{
			if ((this._GioiTinh != value))
			{
				this.OnGioiTinhChanging(value);
				this.SendPropertyChanging();
				this._GioiTinh = value;
				this.SendPropertyChanged("GioiTinh");
				this.OnGioiTinhChanged();
			}
		}
	}
	
	[Column(Storage="_DiaChi", DbType="NVarChar(100)")]
	public string DiaChi
	{
		get
		{
			return this._DiaChi;
		}
		set
		{
			if ((this._DiaChi != value))
			{
				this.OnDiaChiChanging(value);
				this.SendPropertyChanging();
				this._DiaChi = value;
				this.SendPropertyChanged("DiaChi");
				this.OnDiaChiChanged();
			}
		}
	}
	
	[Column(Storage="_SoDienThoai", DbType="Float")]
	public System.Nullable<double> SoDienThoai
	{
		get
		{
			return this._SoDienThoai;
		}
		set
		{
			if ((this._SoDienThoai != value))
			{
				this.OnSoDienThoaiChanging(value);
				this.SendPropertyChanging();
				this._SoDienThoai = value;
				this.SendPropertyChanged("SoDienThoai");
				this.OnSoDienThoaiChanged();
			}
		}
	}
	
	[Column(Storage="_ViTri", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ViTri
	{
		get
		{
			return this._ViTri;
		}
		set
		{
			if ((this._ViTri != value))
			{
				this.OnViTriChanging(value);
				this.SendPropertyChanging();
				this._ViTri = value;
				this.SendPropertyChanged("ViTri");
				this.OnViTriChanged();
			}
		}
	}
	
	[Column(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenDangNhap
	{
		get
		{
			return this._TenDangNhap;
		}
		set
		{
			if ((this._TenDangNhap != value))
			{
				this.OnTenDangNhapChanging(value);
				this.SendPropertyChanging();
				this._TenDangNhap = value;
				this.SendPropertyChanged("TenDangNhap");
				this.OnTenDangNhapChanged();
			}
		}
	}
	
	[Column(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MatKhau
	{
		get
		{
			return this._MatKhau;
		}
		set
		{
			if ((this._MatKhau != value))
			{
				this.OnMatKhauChanging(value);
				this.SendPropertyChanging();
				this._MatKhau = value;
				this.SendPropertyChanged("MatKhau");
				this.OnMatKhauChanged();
			}
		}
	}
	
	[Column(Storage="_NgaySinh", DbType="NVarChar(50)")]
	public string NgaySinh
	{
		get
		{
			return this._NgaySinh;
		}
		set
		{
			if ((this._NgaySinh != value))
			{
				this.OnNgaySinhChanging(value);
				this.SendPropertyChanging();
				this._NgaySinh = value;
				this.SendPropertyChanged("NgaySinh");
				this.OnNgaySinhChanged();
			}
		}
	}
	
	[Column(Storage="_HinhAnh", DbType="NVarChar(50)")]
	public string HinhAnh
	{
		get
		{
			return this._HinhAnh;
		}
		set
		{
			if ((this._HinhAnh != value))
			{
				this.OnHinhAnhChanging(value);
				this.SendPropertyChanging();
				this._HinhAnh = value;
				this.SendPropertyChanged("HinhAnh");
				this.OnHinhAnhChanged();
			}
		}
	}
	
	[Association(Name="NhanVien_HoaDonNhap", Storage="_HoaDonNhaps", OtherKey="MaNhanVien")]
	public EntitySet<HoaDonNhap> HoaDonNhaps
	{
		get
		{
			return this._HoaDonNhaps;
		}
		set
		{
			this._HoaDonNhaps.Assign(value);
		}
	}
	
	[Association(Name="NhanVien_ChucNang", Storage="_ChucNang", ThisKey="MaNhanVien", IsUnique=true, IsForeignKey=false)]
	public ChucNang ChucNang
	{
		get
		{
			return this._ChucNang.Entity;
		}
		set
		{
			ChucNang previousValue = this._ChucNang.Entity;
			if (((previousValue != value) 
						|| (this._ChucNang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ChucNang.Entity = null;
					previousValue.NhanVien = null;
				}
				this._ChucNang.Entity = value;
				if ((value != null))
				{
					value.NhanVien = this;
				}
				this.SendPropertyChanged("ChucNang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_HoaDonNhaps(HoaDonNhap entity)
	{
		this.SendPropertyChanging();
		entity.NhanVien = this;
	}
	
	private void detach_HoaDonNhaps(HoaDonNhap entity)
	{
		this.SendPropertyChanging();
		entity.NhanVien = null;
	}
}

[Table(Name="dbo.NhaSanXuat")]
public partial class NhaSanXuat : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _TenNhaSanXuat;
	
	private string _HinhAnh;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenNhaSanXuatChanging(string value);
    partial void OnTenNhaSanXuatChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    #endregion
	
	public NhaSanXuat()
	{
		OnCreated();
	}
	
	[Column(Storage="_TenNhaSanXuat", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string TenNhaSanXuat
	{
		get
		{
			return this._TenNhaSanXuat;
		}
		set
		{
			if ((this._TenNhaSanXuat != value))
			{
				this.OnTenNhaSanXuatChanging(value);
				this.SendPropertyChanging();
				this._TenNhaSanXuat = value;
				this.SendPropertyChanged("TenNhaSanXuat");
				this.OnTenNhaSanXuatChanged();
			}
		}
	}
	
	[Column(Storage="_HinhAnh", DbType="NVarChar(50)")]
	public string HinhAnh
	{
		get
		{
			return this._HinhAnh;
		}
		set
		{
			if ((this._HinhAnh != value))
			{
				this.OnHinhAnhChanging(value);
				this.SendPropertyChanging();
				this._HinhAnh = value;
				this.SendPropertyChanged("HinhAnh");
				this.OnHinhAnhChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.ChiTietThongSo")]
public partial class ChiTietThongSo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _HangSanXuat;
	
	private string _Model;
	
	private string _BoViXuLy;
	
	private string _BoNhoRam;
	
	private string _ODiaCung;
	
	private string _CardDoHoa;
	
	private string _ODiaquang;
	
	private string _ManHinh;
	
	private string _Camera;
	
	private string _CardMang;
	
	private string _Wifi;
	
	private string _Bluetooth;
	
	private string _HeDieuHanh;
	
	private string _KhoiLuong;
	
	private string _NhanDangVanTay;
	
	private string _PhuKien;
	
	private string _ThongSoKyThuat;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHangSanXuatChanging(string value);
    partial void OnHangSanXuatChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnBoViXuLyChanging(string value);
    partial void OnBoViXuLyChanged();
    partial void OnBoNhoRamChanging(string value);
    partial void OnBoNhoRamChanged();
    partial void OnODiaCungChanging(string value);
    partial void OnODiaCungChanged();
    partial void OnCardDoHoaChanging(string value);
    partial void OnCardDoHoaChanged();
    partial void OnODiaquangChanging(string value);
    partial void OnODiaquangChanged();
    partial void OnManHinhChanging(string value);
    partial void OnManHinhChanged();
    partial void OnCameraChanging(string value);
    partial void OnCameraChanged();
    partial void OnCardMangChanging(string value);
    partial void OnCardMangChanged();
    partial void OnWifiChanging(string value);
    partial void OnWifiChanged();
    partial void OnBluetoothChanging(string value);
    partial void OnBluetoothChanged();
    partial void OnHeDieuHanhChanging(string value);
    partial void OnHeDieuHanhChanged();
    partial void OnKhoiLuongChanging(string value);
    partial void OnKhoiLuongChanged();
    partial void OnNhanDangVanTayChanging(string value);
    partial void OnNhanDangVanTayChanged();
    partial void OnPhuKienChanging(string value);
    partial void OnPhuKienChanged();
    partial void OnThongSoKyThuatChanging(string value);
    partial void OnThongSoKyThuatChanged();
    #endregion
	
	public ChiTietThongSo()
	{
		OnCreated();
	}
	
	[Column(Storage="_HangSanXuat", DbType="NVarChar(50)")]
	public string HangSanXuat
	{
		get
		{
			return this._HangSanXuat;
		}
		set
		{
			if ((this._HangSanXuat != value))
			{
				this.OnHangSanXuatChanging(value);
				this.SendPropertyChanging();
				this._HangSanXuat = value;
				this.SendPropertyChanged("HangSanXuat");
				this.OnHangSanXuatChanged();
			}
		}
	}
	
	[Column(Storage="_Model", DbType="NVarChar(50)")]
	public string Model
	{
		get
		{
			return this._Model;
		}
		set
		{
			if ((this._Model != value))
			{
				this.OnModelChanging(value);
				this.SendPropertyChanging();
				this._Model = value;
				this.SendPropertyChanged("Model");
				this.OnModelChanged();
			}
		}
	}
	
	[Column(Storage="_BoViXuLy", DbType="NVarChar(50)")]
	public string BoViXuLy
	{
		get
		{
			return this._BoViXuLy;
		}
		set
		{
			if ((this._BoViXuLy != value))
			{
				this.OnBoViXuLyChanging(value);
				this.SendPropertyChanging();
				this._BoViXuLy = value;
				this.SendPropertyChanged("BoViXuLy");
				this.OnBoViXuLyChanged();
			}
		}
	}
	
	[Column(Storage="_BoNhoRam", DbType="NVarChar(50)")]
	public string BoNhoRam
	{
		get
		{
			return this._BoNhoRam;
		}
		set
		{
			if ((this._BoNhoRam != value))
			{
				this.OnBoNhoRamChanging(value);
				this.SendPropertyChanging();
				this._BoNhoRam = value;
				this.SendPropertyChanged("BoNhoRam");
				this.OnBoNhoRamChanged();
			}
		}
	}
	
	[Column(Storage="_ODiaCung", DbType="NVarChar(50)")]
	public string ODiaCung
	{
		get
		{
			return this._ODiaCung;
		}
		set
		{
			if ((this._ODiaCung != value))
			{
				this.OnODiaCungChanging(value);
				this.SendPropertyChanging();
				this._ODiaCung = value;
				this.SendPropertyChanged("ODiaCung");
				this.OnODiaCungChanged();
			}
		}
	}
	
	[Column(Storage="_CardDoHoa", DbType="NVarChar(50)")]
	public string CardDoHoa
	{
		get
		{
			return this._CardDoHoa;
		}
		set
		{
			if ((this._CardDoHoa != value))
			{
				this.OnCardDoHoaChanging(value);
				this.SendPropertyChanging();
				this._CardDoHoa = value;
				this.SendPropertyChanged("CardDoHoa");
				this.OnCardDoHoaChanged();
			}
		}
	}
	
	[Column(Storage="_ODiaquang", DbType="NVarChar(50)")]
	public string ODiaquang
	{
		get
		{
			return this._ODiaquang;
		}
		set
		{
			if ((this._ODiaquang != value))
			{
				this.OnODiaquangChanging(value);
				this.SendPropertyChanging();
				this._ODiaquang = value;
				this.SendPropertyChanged("ODiaquang");
				this.OnODiaquangChanged();
			}
		}
	}
	
	[Column(Storage="_ManHinh", DbType="NVarChar(50)")]
	public string ManHinh
	{
		get
		{
			return this._ManHinh;
		}
		set
		{
			if ((this._ManHinh != value))
			{
				this.OnManHinhChanging(value);
				this.SendPropertyChanging();
				this._ManHinh = value;
				this.SendPropertyChanged("ManHinh");
				this.OnManHinhChanged();
			}
		}
	}
	
	[Column(Storage="_Camera", DbType="NVarChar(50)")]
	public string Camera
	{
		get
		{
			return this._Camera;
		}
		set
		{
			if ((this._Camera != value))
			{
				this.OnCameraChanging(value);
				this.SendPropertyChanging();
				this._Camera = value;
				this.SendPropertyChanged("Camera");
				this.OnCameraChanged();
			}
		}
	}
	
	[Column(Storage="_CardMang", DbType="NVarChar(50)")]
	public string CardMang
	{
		get
		{
			return this._CardMang;
		}
		set
		{
			if ((this._CardMang != value))
			{
				this.OnCardMangChanging(value);
				this.SendPropertyChanging();
				this._CardMang = value;
				this.SendPropertyChanged("CardMang");
				this.OnCardMangChanged();
			}
		}
	}
	
	[Column(Storage="_Wifi", DbType="NVarChar(50)")]
	public string Wifi
	{
		get
		{
			return this._Wifi;
		}
		set
		{
			if ((this._Wifi != value))
			{
				this.OnWifiChanging(value);
				this.SendPropertyChanging();
				this._Wifi = value;
				this.SendPropertyChanged("Wifi");
				this.OnWifiChanged();
			}
		}
	}
	
	[Column(Storage="_Bluetooth", DbType="NVarChar(50)")]
	public string Bluetooth
	{
		get
		{
			return this._Bluetooth;
		}
		set
		{
			if ((this._Bluetooth != value))
			{
				this.OnBluetoothChanging(value);
				this.SendPropertyChanging();
				this._Bluetooth = value;
				this.SendPropertyChanged("Bluetooth");
				this.OnBluetoothChanged();
			}
		}
	}
	
	[Column(Storage="_HeDieuHanh", DbType="NVarChar(50)")]
	public string HeDieuHanh
	{
		get
		{
			return this._HeDieuHanh;
		}
		set
		{
			if ((this._HeDieuHanh != value))
			{
				this.OnHeDieuHanhChanging(value);
				this.SendPropertyChanging();
				this._HeDieuHanh = value;
				this.SendPropertyChanged("HeDieuHanh");
				this.OnHeDieuHanhChanged();
			}
		}
	}
	
	[Column(Storage="_KhoiLuong", DbType="NVarChar(50)")]
	public string KhoiLuong
	{
		get
		{
			return this._KhoiLuong;
		}
		set
		{
			if ((this._KhoiLuong != value))
			{
				this.OnKhoiLuongChanging(value);
				this.SendPropertyChanging();
				this._KhoiLuong = value;
				this.SendPropertyChanged("KhoiLuong");
				this.OnKhoiLuongChanged();
			}
		}
	}
	
	[Column(Storage="_NhanDangVanTay", DbType="NVarChar(50)")]
	public string NhanDangVanTay
	{
		get
		{
			return this._NhanDangVanTay;
		}
		set
		{
			if ((this._NhanDangVanTay != value))
			{
				this.OnNhanDangVanTayChanging(value);
				this.SendPropertyChanging();
				this._NhanDangVanTay = value;
				this.SendPropertyChanged("NhanDangVanTay");
				this.OnNhanDangVanTayChanged();
			}
		}
	}
	
	[Column(Storage="_PhuKien", DbType="NVarChar(50)")]
	public string PhuKien
	{
		get
		{
			return this._PhuKien;
		}
		set
		{
			if ((this._PhuKien != value))
			{
				this.OnPhuKienChanging(value);
				this.SendPropertyChanging();
				this._PhuKien = value;
				this.SendPropertyChanged("PhuKien");
				this.OnPhuKienChanged();
			}
		}
	}
	
	[Column(Storage="_ThongSoKyThuat", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ThongSoKyThuat
	{
		get
		{
			return this._ThongSoKyThuat;
		}
		set
		{
			if ((this._ThongSoKyThuat != value))
			{
				this.OnThongSoKyThuatChanging(value);
				this.SendPropertyChanging();
				this._ThongSoKyThuat = value;
				this.SendPropertyChanged("ThongSoKyThuat");
				this.OnThongSoKyThuatChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.SanPham")]
public partial class SanPhams : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaSanPham;
	
	private string _TenSP;
	
	private string _LoaiSP;
	
	private string _NhaSanXuat;
	
	private string _BaoHanh;
	
	private int _SoLuong;
	
	private string _ThongSoKyThuat;
	
	private double _GiaBan;
	
	private string _HinhAnh;
	
	private string _GhiChu;
	
	private System.Nullable<int> _MaKhuyenMai;
	
	private EntitySet<ChiTietNhap> _ChiTietNhaps;
	
	private EntitySet<GioHangs> _GioHangs;
	
	private EntityRef<SanPham_KhuyenMai> _SanPham_KhuyenMai;
	
	private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
	
	private EntityRef<KhuyenMai> _KhuyenMai;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnLoaiSPChanging(string value);
    partial void OnLoaiSPChanged();
    partial void OnNhaSanXuatChanging(string value);
    partial void OnNhaSanXuatChanged();
    partial void OnBaoHanhChanging(string value);
    partial void OnBaoHanhChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnThongSoKyThuatChanging(string value);
    partial void OnThongSoKyThuatChanged();
    partial void OnGiaBanChanging(double value);
    partial void OnGiaBanChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnMaKhuyenMaiChanging(System.Nullable<int> value);
    partial void OnMaKhuyenMaiChanged();
    #endregion
	
	public SanPhams()
	{
		this._ChiTietNhaps = new EntitySet<ChiTietNhap>(new Action<ChiTietNhap>(this.attach_ChiTietNhaps), new Action<ChiTietNhap>(this.detach_ChiTietNhaps));
		this._GioHangs = new EntitySet<GioHangs>(new Action<GioHangs>(this.attach_GioHangs), new Action<GioHangs>(this.detach_GioHangs));
		this._SanPham_KhuyenMai = default(EntityRef<SanPham_KhuyenMai>);
		this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
		this._KhuyenMai = default(EntityRef<KhuyenMai>);
		OnCreated();
	}
	
	[Column(Storage="_MaSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MaSanPham
	{
		get
		{
			return this._MaSanPham;
		}
		set
		{
			if ((this._MaSanPham != value))
			{
				this.OnMaSanPhamChanging(value);
				this.SendPropertyChanging();
				this._MaSanPham = value;
				this.SendPropertyChanged("MaSanPham");
				this.OnMaSanPhamChanged();
			}
		}
	}
	
	[Column(Storage="_TenSP", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string TenSP
	{
		get
		{
			return this._TenSP;
		}
		set
		{
			if ((this._TenSP != value))
			{
				this.OnTenSPChanging(value);
				this.SendPropertyChanging();
				this._TenSP = value;
				this.SendPropertyChanged("TenSP");
				this.OnTenSPChanged();
			}
		}
	}
	
	[Column(Storage="_LoaiSP", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string LoaiSP
	{
		get
		{
			return this._LoaiSP;
		}
		set
		{
			if ((this._LoaiSP != value))
			{
				this.OnLoaiSPChanging(value);
				this.SendPropertyChanging();
				this._LoaiSP = value;
				this.SendPropertyChanged("LoaiSP");
				this.OnLoaiSPChanged();
			}
		}
	}
	
	[Column(Storage="_NhaSanXuat", DbType="NVarChar(100)")]
	public string NhaSanXuat
	{
		get
		{
			return this._NhaSanXuat;
		}
		set
		{
			if ((this._NhaSanXuat != value))
			{
				this.OnNhaSanXuatChanging(value);
				this.SendPropertyChanging();
				this._NhaSanXuat = value;
				this.SendPropertyChanged("NhaSanXuat");
				this.OnNhaSanXuatChanged();
			}
		}
	}
	
	[Column(Storage="_BaoHanh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string BaoHanh
	{
		get
		{
			return this._BaoHanh;
		}
		set
		{
			if ((this._BaoHanh != value))
			{
				this.OnBaoHanhChanging(value);
				this.SendPropertyChanging();
				this._BaoHanh = value;
				this.SendPropertyChanged("BaoHanh");
				this.OnBaoHanhChanged();
			}
		}
	}
	
	[Column(Storage="_SoLuong", DbType="Int NOT NULL")]
	public int SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[Column(Storage="_ThongSoKyThuat", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string ThongSoKyThuat
	{
		get
		{
			return this._ThongSoKyThuat;
		}
		set
		{
			if ((this._ThongSoKyThuat != value))
			{
				this.OnThongSoKyThuatChanging(value);
				this.SendPropertyChanging();
				this._ThongSoKyThuat = value;
				this.SendPropertyChanged("ThongSoKyThuat");
				this.OnThongSoKyThuatChanged();
			}
		}
	}
	
	[Column(Storage="_GiaBan", DbType="Float NOT NULL")]
	public double GiaBan
	{
		get
		{
			return this._GiaBan;
		}
		set
		{
			if ((this._GiaBan != value))
			{
				this.OnGiaBanChanging(value);
				this.SendPropertyChanging();
				this._GiaBan = value;
				this.SendPropertyChanged("GiaBan");
				this.OnGiaBanChanged();
			}
		}
	}
	
	[Column(Storage="_HinhAnh", DbType="NVarChar(500)")]
	public string HinhAnh
	{
		get
		{
			return this._HinhAnh;
		}
		set
		{
			if ((this._HinhAnh != value))
			{
				this.OnHinhAnhChanging(value);
				this.SendPropertyChanging();
				this._HinhAnh = value;
				this.SendPropertyChanged("HinhAnh");
				this.OnHinhAnhChanged();
			}
		}
	}
	
	[Column(Storage="_GhiChu", DbType="NVarChar(300)")]
	public string GhiChu
	{
		get
		{
			return this._GhiChu;
		}
		set
		{
			if ((this._GhiChu != value))
			{
				this.OnGhiChuChanging(value);
				this.SendPropertyChanging();
				this._GhiChu = value;
				this.SendPropertyChanged("GhiChu");
				this.OnGhiChuChanged();
			}
		}
	}
	
	[Column(Storage="_MaKhuyenMai", DbType="Int")]
	public System.Nullable<int> MaKhuyenMai
	{
		get
		{
			return this._MaKhuyenMai;
		}
		set
		{
			if ((this._MaKhuyenMai != value))
			{
				if (this._KhuyenMai.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKhuyenMaiChanging(value);
				this.SendPropertyChanging();
				this._MaKhuyenMai = value;
				this.SendPropertyChanged("MaKhuyenMai");
				this.OnMaKhuyenMaiChanged();
			}
		}
	}
	
	[Association(Name="SanPhams_ChiTietNhap", Storage="_ChiTietNhaps", OtherKey="MaSanPham")]
	public EntitySet<ChiTietNhap> ChiTietNhaps
	{
		get
		{
			return this._ChiTietNhaps;
		}
		set
		{
			this._ChiTietNhaps.Assign(value);
		}
	}
	
	[Association(Name="SanPhams_GioHangs", Storage="_GioHangs", OtherKey="MaSanPham")]
	public EntitySet<GioHangs> GioHangs
	{
		get
		{
			return this._GioHangs;
		}
		set
		{
			this._GioHangs.Assign(value);
		}
	}
	
	[Association(Name="SanPhams_SanPham_KhuyenMai", Storage="_SanPham_KhuyenMai", ThisKey="MaSanPham", IsUnique=true, IsForeignKey=false)]
	public SanPham_KhuyenMai SanPham_KhuyenMai
	{
		get
		{
			return this._SanPham_KhuyenMai.Entity;
		}
		set
		{
			SanPham_KhuyenMai previousValue = this._SanPham_KhuyenMai.Entity;
			if (((previousValue != value) 
						|| (this._SanPham_KhuyenMai.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPham_KhuyenMai.Entity = null;
					previousValue.SanPhams = null;
				}
				this._SanPham_KhuyenMai.Entity = value;
				if ((value != null))
				{
					value.SanPhams = this;
				}
				this.SendPropertyChanged("SanPham_KhuyenMai");
			}
		}
	}
	
	[Association(Name="SanPhams_ChiTietDonHang", Storage="_ChiTietDonHangs", OtherKey="MaSanPham")]
	public EntitySet<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this._ChiTietDonHangs;
		}
		set
		{
			this._ChiTietDonHangs.Assign(value);
		}
	}
	
	[Association(Name="KhuyenMai_SanPhams", Storage="_KhuyenMai", ThisKey="MaKhuyenMai", IsForeignKey=true)]
	public KhuyenMai KhuyenMai
	{
		get
		{
			return this._KhuyenMai.Entity;
		}
		set
		{
			KhuyenMai previousValue = this._KhuyenMai.Entity;
			if (((previousValue != value) 
						|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhuyenMai.Entity = null;
					previousValue.SanPhams.Remove(this);
				}
				this._KhuyenMai.Entity = value;
				if ((value != null))
				{
					value.SanPhams.Add(this);
					this._MaKhuyenMai = value.MaKhuyenMai;
				}
				else
				{
					this._MaKhuyenMai = default(Nullable<int>);
				}
				this.SendPropertyChanged("KhuyenMai");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietNhaps(ChiTietNhap entity)
	{
		this.SendPropertyChanging();
		entity.SanPhams = this;
	}
	
	private void detach_ChiTietNhaps(ChiTietNhap entity)
	{
		this.SendPropertyChanging();
		entity.SanPhams = null;
	}
	
	private void attach_GioHangs(GioHangs entity)
	{
		this.SendPropertyChanging();
		entity.SanPhams = this;
	}
	
	private void detach_GioHangs(GioHangs entity)
	{
		this.SendPropertyChanging();
		entity.SanPhams = null;
	}
	
	private void attach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPhams = this;
	}
	
	private void detach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.SanPhams = null;
	}
}

[Table(Name="dbo.GioHang")]
public partial class GioHangs : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaSanPham;
	
	private int _MaKhachHang;
	
	private System.Nullable<double> _SoLuong;
	
	private EntityRef<KhachHang> _KhachHang;
	
	private EntityRef<SanPhams> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnSoLuongChanging(System.Nullable<double> value);
    partial void OnSoLuongChanged();
    #endregion
	
	public GioHangs()
	{
		this._KhachHang = default(EntityRef<KhachHang>);
		this._SanPhams = default(EntityRef<SanPhams>);
		OnCreated();
	}
	
	[Column(Storage="_MaSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaSanPham
	{
		get
		{
			return this._MaSanPham;
		}
		set
		{
			if ((this._MaSanPham != value))
			{
				if (this._SanPhams.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSanPhamChanging(value);
				this.SendPropertyChanging();
				this._MaSanPham = value;
				this.SendPropertyChanged("MaSanPham");
				this.OnMaSanPhamChanged();
			}
		}
	}
	
	[Column(Storage="_MaKhachHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaKhachHang
	{
		get
		{
			return this._MaKhachHang;
		}
		set
		{
			if ((this._MaKhachHang != value))
			{
				if (this._KhachHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKhachHangChanging(value);
				this.SendPropertyChanging();
				this._MaKhachHang = value;
				this.SendPropertyChanged("MaKhachHang");
				this.OnMaKhachHangChanged();
			}
		}
	}
	
	[Column(Storage="_SoLuong", DbType="Float")]
	public System.Nullable<double> SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[Association(Name="KhachHang_GioHangs", Storage="_KhachHang", ThisKey="MaKhachHang", IsForeignKey=true)]
	public KhachHang KhachHang
	{
		get
		{
			return this._KhachHang.Entity;
		}
		set
		{
			KhachHang previousValue = this._KhachHang.Entity;
			if (((previousValue != value) 
						|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhachHang.Entity = null;
					previousValue.GioHangs.Remove(this);
				}
				this._KhachHang.Entity = value;
				if ((value != null))
				{
					value.GioHangs.Add(this);
					this._MaKhachHang = value.MaKhachHang;
				}
				else
				{
					this._MaKhachHang = default(int);
				}
				this.SendPropertyChanged("KhachHang");
			}
		}
	}
	
	[Association(Name="SanPhams_GioHangs", Storage="_SanPhams", ThisKey="MaSanPham", IsForeignKey=true)]
	public SanPhams SanPhams
	{
		get
		{
			return this._SanPhams.Entity;
		}
		set
		{
			SanPhams previousValue = this._SanPhams.Entity;
			if (((previousValue != value) 
						|| (this._SanPhams.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPhams.Entity = null;
					previousValue.GioHangs.Remove(this);
				}
				this._SanPhams.Entity = value;
				if ((value != null))
				{
					value.GioHangs.Add(this);
					this._MaSanPham = value.MaSanPham;
				}
				else
				{
					this._MaSanPham = default(int);
				}
				this.SendPropertyChanged("SanPhams");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.KhuyenMai")]
public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaKhuyenMai;
	
	private string _NoiDungKhuyenMai;
	
	private string _NgayBatDau;
	
	private string _NgayKetThuc;
	
	private string _TenKhuyenMai;
	
	private string _NgayTao;
	
	private string _GiaCanGiam;
	
	private EntitySet<SanPhams> _SanPhams;
	
	private EntitySet<SanPham_KhuyenMai> _SanPham_KhuyenMais;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhuyenMaiChanging(int value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnNoiDungKhuyenMaiChanging(string value);
    partial void OnNoiDungKhuyenMaiChanged();
    partial void OnNgayBatDauChanging(string value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(string value);
    partial void OnNgayKetThucChanged();
    partial void OnTenKhuyenMaiChanging(string value);
    partial void OnTenKhuyenMaiChanged();
    partial void OnNgayTaoChanging(string value);
    partial void OnNgayTaoChanged();
    partial void OnGiaCanGiamChanging(string value);
    partial void OnGiaCanGiamChanged();
    #endregion
	
	public KhuyenMai()
	{
		this._SanPhams = new EntitySet<SanPhams>(new Action<SanPhams>(this.attach_SanPhams), new Action<SanPhams>(this.detach_SanPhams));
		this._SanPham_KhuyenMais = new EntitySet<SanPham_KhuyenMai>(new Action<SanPham_KhuyenMai>(this.attach_SanPham_KhuyenMais), new Action<SanPham_KhuyenMai>(this.detach_SanPham_KhuyenMais));
		OnCreated();
	}
	
	[Column(Storage="_MaKhuyenMai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MaKhuyenMai
	{
		get
		{
			return this._MaKhuyenMai;
		}
		set
		{
			if ((this._MaKhuyenMai != value))
			{
				this.OnMaKhuyenMaiChanging(value);
				this.SendPropertyChanging();
				this._MaKhuyenMai = value;
				this.SendPropertyChanged("MaKhuyenMai");
				this.OnMaKhuyenMaiChanged();
			}
		}
	}
	
	[Column(Storage="_NoiDungKhuyenMai", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string NoiDungKhuyenMai
	{
		get
		{
			return this._NoiDungKhuyenMai;
		}
		set
		{
			if ((this._NoiDungKhuyenMai != value))
			{
				this.OnNoiDungKhuyenMaiChanging(value);
				this.SendPropertyChanging();
				this._NoiDungKhuyenMai = value;
				this.SendPropertyChanged("NoiDungKhuyenMai");
				this.OnNoiDungKhuyenMaiChanged();
			}
		}
	}
	
	[Column(Storage="_NgayBatDau", DbType="NVarChar(50)")]
	public string NgayBatDau
	{
		get
		{
			return this._NgayBatDau;
		}
		set
		{
			if ((this._NgayBatDau != value))
			{
				this.OnNgayBatDauChanging(value);
				this.SendPropertyChanging();
				this._NgayBatDau = value;
				this.SendPropertyChanged("NgayBatDau");
				this.OnNgayBatDauChanged();
			}
		}
	}
	
	[Column(Storage="_NgayKetThuc", DbType="NVarChar(50)")]
	public string NgayKetThuc
	{
		get
		{
			return this._NgayKetThuc;
		}
		set
		{
			if ((this._NgayKetThuc != value))
			{
				this.OnNgayKetThucChanging(value);
				this.SendPropertyChanging();
				this._NgayKetThuc = value;
				this.SendPropertyChanged("NgayKetThuc");
				this.OnNgayKetThucChanged();
			}
		}
	}
	
	[Column(Storage="_TenKhuyenMai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenKhuyenMai
	{
		get
		{
			return this._TenKhuyenMai;
		}
		set
		{
			if ((this._TenKhuyenMai != value))
			{
				this.OnTenKhuyenMaiChanging(value);
				this.SendPropertyChanging();
				this._TenKhuyenMai = value;
				this.SendPropertyChanged("TenKhuyenMai");
				this.OnTenKhuyenMaiChanged();
			}
		}
	}
	
	[Column(Storage="_NgayTao", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NgayTao
	{
		get
		{
			return this._NgayTao;
		}
		set
		{
			if ((this._NgayTao != value))
			{
				this.OnNgayTaoChanging(value);
				this.SendPropertyChanging();
				this._NgayTao = value;
				this.SendPropertyChanged("NgayTao");
				this.OnNgayTaoChanged();
			}
		}
	}
	
	[Column(Storage="_GiaCanGiam", DbType="NVarChar(50)")]
	public string GiaCanGiam
	{
		get
		{
			return this._GiaCanGiam;
		}
		set
		{
			if ((this._GiaCanGiam != value))
			{
				this.OnGiaCanGiamChanging(value);
				this.SendPropertyChanging();
				this._GiaCanGiam = value;
				this.SendPropertyChanged("GiaCanGiam");
				this.OnGiaCanGiamChanged();
			}
		}
	}
	
	[Association(Name="KhuyenMai_SanPhams", Storage="_SanPhams", OtherKey="MaKhuyenMai")]
	public EntitySet<SanPhams> SanPhams
	{
		get
		{
			return this._SanPhams;
		}
		set
		{
			this._SanPhams.Assign(value);
		}
	}
	
	[Association(Name="KhuyenMai_SanPham_KhuyenMai", Storage="_SanPham_KhuyenMais", OtherKey="MaKhuyenMai")]
	public EntitySet<SanPham_KhuyenMai> SanPham_KhuyenMais
	{
		get
		{
			return this._SanPham_KhuyenMais;
		}
		set
		{
			this._SanPham_KhuyenMais.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SanPhams(SanPhams entity)
	{
		this.SendPropertyChanging();
		entity.KhuyenMai = this;
	}
	
	private void detach_SanPhams(SanPhams entity)
	{
		this.SendPropertyChanging();
		entity.KhuyenMai = null;
	}
	
	private void attach_SanPham_KhuyenMais(SanPham_KhuyenMai entity)
	{
		this.SendPropertyChanging();
		entity.KhuyenMai = this;
	}
	
	private void detach_SanPham_KhuyenMais(SanPham_KhuyenMai entity)
	{
		this.SendPropertyChanging();
		entity.KhuyenMai = null;
	}
}

[Table(Name="dbo.SanPham_KhuyenMai")]
public partial class SanPham_KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaKhuyenMai;
	
	private int _MaSanPham;
	
	private EntityRef<KhuyenMai> _KhuyenMai;
	
	private EntityRef<SanPhams> _SanPhams;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhuyenMaiChanging(int value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    #endregion
	
	public SanPham_KhuyenMai()
	{
		this._KhuyenMai = default(EntityRef<KhuyenMai>);
		this._SanPhams = default(EntityRef<SanPhams>);
		OnCreated();
	}
	
	[Column(Storage="_MaKhuyenMai", DbType="Int NOT NULL")]
	public int MaKhuyenMai
	{
		get
		{
			return this._MaKhuyenMai;
		}
		set
		{
			if ((this._MaKhuyenMai != value))
			{
				if (this._KhuyenMai.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKhuyenMaiChanging(value);
				this.SendPropertyChanging();
				this._MaKhuyenMai = value;
				this.SendPropertyChanged("MaKhuyenMai");
				this.OnMaKhuyenMaiChanged();
			}
		}
	}
	
	[Column(Storage="_MaSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaSanPham
	{
		get
		{
			return this._MaSanPham;
		}
		set
		{
			if ((this._MaSanPham != value))
			{
				if (this._SanPhams.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSanPhamChanging(value);
				this.SendPropertyChanging();
				this._MaSanPham = value;
				this.SendPropertyChanged("MaSanPham");
				this.OnMaSanPhamChanged();
			}
		}
	}
	
	[Association(Name="KhuyenMai_SanPham_KhuyenMai", Storage="_KhuyenMai", ThisKey="MaKhuyenMai", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public KhuyenMai KhuyenMai
	{
		get
		{
			return this._KhuyenMai.Entity;
		}
		set
		{
			KhuyenMai previousValue = this._KhuyenMai.Entity;
			if (((previousValue != value) 
						|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhuyenMai.Entity = null;
					previousValue.SanPham_KhuyenMais.Remove(this);
				}
				this._KhuyenMai.Entity = value;
				if ((value != null))
				{
					value.SanPham_KhuyenMais.Add(this);
					this._MaKhuyenMai = value.MaKhuyenMai;
				}
				else
				{
					this._MaKhuyenMai = default(int);
				}
				this.SendPropertyChanged("KhuyenMai");
			}
		}
	}
	
	[Association(Name="SanPhams_SanPham_KhuyenMai", Storage="_SanPhams", ThisKey="MaSanPham", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public SanPhams SanPhams
	{
		get
		{
			return this._SanPhams.Entity;
		}
		set
		{
			SanPhams previousValue = this._SanPhams.Entity;
			if (((previousValue != value) 
						|| (this._SanPhams.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPhams.Entity = null;
					previousValue.SanPham_KhuyenMai = null;
				}
				this._SanPhams.Entity = value;
				if ((value != null))
				{
					value.SanPham_KhuyenMai = this;
					this._MaSanPham = value.MaSanPham;
				}
				else
				{
					this._MaSanPham = default(int);
				}
				this.SendPropertyChanged("SanPhams");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.ChiTietDonHang")]
public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaSanPham;
	
	private int _SoLuong;
	
	private int _MaDonHang;
	
	private EntityRef<SanPhams> _SanPhams;
	
	private EntityRef<DonDatHangs> _DonDatHangs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(int value);
    partial void OnMaSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    #endregion
	
	public ChiTietDonHang()
	{
		this._SanPhams = default(EntityRef<SanPhams>);
		this._DonDatHangs = default(EntityRef<DonDatHangs>);
		OnCreated();
	}
	
	[Column(Storage="_MaSanPham", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaSanPham
	{
		get
		{
			return this._MaSanPham;
		}
		set
		{
			if ((this._MaSanPham != value))
			{
				if (this._SanPhams.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaSanPhamChanging(value);
				this.SendPropertyChanging();
				this._MaSanPham = value;
				this.SendPropertyChanged("MaSanPham");
				this.OnMaSanPhamChanged();
			}
		}
	}
	
	[Column(Storage="_SoLuong", DbType="Int NOT NULL")]
	public int SoLuong
	{
		get
		{
			return this._SoLuong;
		}
		set
		{
			if ((this._SoLuong != value))
			{
				this.OnSoLuongChanging(value);
				this.SendPropertyChanging();
				this._SoLuong = value;
				this.SendPropertyChanged("SoLuong");
				this.OnSoLuongChanged();
			}
		}
	}
	
	[Column(Storage="_MaDonHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MaDonHang
	{
		get
		{
			return this._MaDonHang;
		}
		set
		{
			if ((this._MaDonHang != value))
			{
				if (this._DonDatHangs.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaDonHangChanging(value);
				this.SendPropertyChanging();
				this._MaDonHang = value;
				this.SendPropertyChanged("MaDonHang");
				this.OnMaDonHangChanged();
			}
		}
	}
	
	[Association(Name="SanPhams_ChiTietDonHang", Storage="_SanPhams", ThisKey="MaSanPham", IsForeignKey=true)]
	public SanPhams SanPhams
	{
		get
		{
			return this._SanPhams.Entity;
		}
		set
		{
			SanPhams previousValue = this._SanPhams.Entity;
			if (((previousValue != value) 
						|| (this._SanPhams.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SanPhams.Entity = null;
					previousValue.ChiTietDonHangs.Remove(this);
				}
				this._SanPhams.Entity = value;
				if ((value != null))
				{
					value.ChiTietDonHangs.Add(this);
					this._MaSanPham = value.MaSanPham;
				}
				else
				{
					this._MaSanPham = default(int);
				}
				this.SendPropertyChanged("SanPhams");
			}
		}
	}
	
	[Association(Name="DonDatHang_ChiTietDonHang", Storage="_DonDatHangs", ThisKey="MaDonHang", IsForeignKey=true)]
	public DonDatHangs DonDatHangs
	{
		get
		{
			return this._DonDatHangs.Entity;
		}
		set
		{
			DonDatHangs previousValue = this._DonDatHangs.Entity;
			if (((previousValue != value) 
						|| (this._DonDatHangs.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DonDatHangs.Entity = null;
					previousValue.ChiTietDonHangs.Remove(this);
				}
				this._DonDatHangs.Entity = value;
				if ((value != null))
				{
					value.ChiTietDonHangs.Add(this);
					this._MaDonHang = value.MaDonHang;
				}
				else
				{
					this._MaDonHang = default(int);
				}
				this.SendPropertyChanged("DonDatHangs");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.DonDatHang")]
public partial class DonDatHangs : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MaDonHang;
	
	private string _NgayDatHang;
	
	private double _TongTien;
	
	private int _MaKhachHang;
	
	private string _TinhTrang;
	
	private string _YeuCauKhachHang;
	
	private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
	
	private EntityRef<KhachHang> _KhachHang;
	
	private EntityRef<KhachHang> _KhachHang1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    partial void OnNgayDatHangChanging(string value);
    partial void OnNgayDatHangChanged();
    partial void OnTongTienChanging(double value);
    partial void OnTongTienChanged();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnYeuCauKhachHangChanging(string value);
    partial void OnYeuCauKhachHangChanged();
    #endregion
	
	public DonDatHangs()
	{
		this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
		this._KhachHang = default(EntityRef<KhachHang>);
		this._KhachHang1 = default(EntityRef<KhachHang>);
		OnCreated();
	}
	
	[Column(Storage="_MaDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MaDonHang
	{
		get
		{
			return this._MaDonHang;
		}
		set
		{
			if ((this._MaDonHang != value))
			{
				this.OnMaDonHangChanging(value);
				this.SendPropertyChanging();
				this._MaDonHang = value;
				this.SendPropertyChanged("MaDonHang");
				this.OnMaDonHangChanged();
			}
		}
	}
	
	[Column(Storage="_NgayDatHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NgayDatHang
	{
		get
		{
			return this._NgayDatHang;
		}
		set
		{
			if ((this._NgayDatHang != value))
			{
				this.OnNgayDatHangChanging(value);
				this.SendPropertyChanging();
				this._NgayDatHang = value;
				this.SendPropertyChanged("NgayDatHang");
				this.OnNgayDatHangChanged();
			}
		}
	}
	
	[Column(Storage="_TongTien", DbType="Float NOT NULL")]
	public double TongTien
	{
		get
		{
			return this._TongTien;
		}
		set
		{
			if ((this._TongTien != value))
			{
				this.OnTongTienChanging(value);
				this.SendPropertyChanging();
				this._TongTien = value;
				this.SendPropertyChanged("TongTien");
				this.OnTongTienChanged();
			}
		}
	}
	
	[Column(Storage="_MaKhachHang", DbType="Int NOT NULL")]
	public int MaKhachHang
	{
		get
		{
			return this._MaKhachHang;
		}
		set
		{
			if ((this._MaKhachHang != value))
			{
				if (this._KhachHang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaKhachHangChanging(value);
				this.SendPropertyChanging();
				this._MaKhachHang = value;
				this.SendPropertyChanged("MaKhachHang");
				this.OnMaKhachHangChanged();
			}
		}
	}
	
	[Column(Storage="_TinhTrang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TinhTrang
	{
		get
		{
			return this._TinhTrang;
		}
		set
		{
			if ((this._TinhTrang != value))
			{
				this.OnTinhTrangChanging(value);
				this.SendPropertyChanging();
				this._TinhTrang = value;
				this.SendPropertyChanged("TinhTrang");
				this.OnTinhTrangChanged();
			}
		}
	}
	
	[Column(Storage="_YeuCauKhachHang", DbType="NVarChar(500)")]
	public string YeuCauKhachHang
	{
		get
		{
			return this._YeuCauKhachHang;
		}
		set
		{
			if ((this._YeuCauKhachHang != value))
			{
				this.OnYeuCauKhachHangChanging(value);
				this.SendPropertyChanging();
				this._YeuCauKhachHang = value;
				this.SendPropertyChanged("YeuCauKhachHang");
				this.OnYeuCauKhachHangChanged();
			}
		}
	}
	
	[Association(Name="DonDatHang_ChiTietDonHang", Storage="_ChiTietDonHangs", OtherKey="MaDonHang")]
	public EntitySet<ChiTietDonHang> ChiTietDonHangs
	{
		get
		{
			return this._ChiTietDonHangs;
		}
		set
		{
			this._ChiTietDonHangs.Assign(value);
		}
	}
	
	[Association(Name="KhachHang_DonDatHang", Storage="_KhachHang", ThisKey="MaKhachHang", IsForeignKey=true)]
	public KhachHang KhachHang
	{
		get
		{
			return this._KhachHang.Entity;
		}
		set
		{
			KhachHang previousValue = this._KhachHang.Entity;
			if (((previousValue != value) 
						|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhachHang.Entity = null;
					previousValue.DonDatHangs.Remove(this);
				}
				this._KhachHang.Entity = value;
				if ((value != null))
				{
					value.DonDatHangs.Add(this);
					this._MaKhachHang = value.MaKhachHang;
				}
				else
				{
					this._MaKhachHang = default(int);
				}
				this.SendPropertyChanged("KhachHang");
			}
		}
	}
	
	[Association(Name="KhachHang_DonDatHang1", Storage="_KhachHang1", ThisKey="MaKhachHang", IsForeignKey=true)]
	public KhachHang KhachHang1
	{
		get
		{
			return this._KhachHang1.Entity;
		}
		set
		{
			KhachHang previousValue = this._KhachHang1.Entity;
			if (((previousValue != value) 
						|| (this._KhachHang1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._KhachHang1.Entity = null;
					previousValue.DonDatHangs1.Remove(this);
				}
				this._KhachHang1.Entity = value;
				if ((value != null))
				{
					value.DonDatHangs1.Add(this);
					this._MaKhachHang = value.MaKhachHang;
				}
				else
				{
					this._MaKhachHang = default(int);
				}
				this.SendPropertyChanged("KhachHang1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.DonDatHangs = this;
	}
	
	private void detach_ChiTietDonHangs(ChiTietDonHang entity)
	{
		this.SendPropertyChanging();
		entity.DonDatHangs = null;
	}
}
#pragma warning restore 1591
